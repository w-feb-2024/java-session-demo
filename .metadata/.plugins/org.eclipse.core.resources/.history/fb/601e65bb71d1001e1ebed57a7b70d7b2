package genericsandcollection;

import java.util.Objects;

// DTO - Data  Transfer Objects
// VO - Value Object
// TO - Transfer Object
// BO - Bussiness Object
// POJO - Plain Old Java Object
public class Employee implements Comparable{
	private int empId;
	private String empName;
	private String empDesignation;
	
	public Employee(int empId, String empName, String empDesignation) {
		super();
		this.empId = empId;
		this.empName = empName;
		this.empDesignation = empDesignation;
	}

	public int getEmpId() {
		return empId;
	}

	public void setEmpId(int empId) {
		this.empId = empId;
	}

	public String getEmpName() {
		return empName;
	}

	public void setEmpName(String empName) {
		this.empName = empName;
	}

	public String getEmpDesignation() {
		return empDesignation;
	}

	public void setEmpDesignation(String empDesignation) {
		this.empDesignation = empDesignation;
	}
	
	@Override
	public int hashCode() {
		return Objects.hash(empDesignation, empId, empName);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Employee other = (Employee) obj;
		return Objects.equals(empDesignation, other.empDesignation) && empId == other.empId
				&& Objects.equals(empName, other.empName);
	}

	@Override
	public String toString() {
		return "Employee [empId=" + empId + ", empName=" + empName + ", empDesignation=" + empDesignation + "]";
	}
	
}
